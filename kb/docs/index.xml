<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on amcpu knowledge base</title>
    <link>http://amcpu.org/kb/docs/</link>
    <description>Recent content in Docs on amcpu knowledge base</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://amcpu.org/kb/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sites</title>
      <link>http://amcpu.org/kb/docs/sites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://amcpu.org/kb/docs/sites/</guid>
      <description>2021-02-21 #   [linux] https://jvns.ca/blog/2016/10/10/what-even-is-a-container/ [k8s] https://learnk8s.io/sidecar-containers-patterns  2021-02-16 #   [k8s] [prom] https://sysdig.com/blog/kubernetes-monitoring-prometheus/  2021-02-14 #   [k8s] https://loft.sh/blog/kubernetes-liveness-probes-examples-common-pitfalls/index-1/ [sre] https://www.honeycomb.io/blog/fostering-resilient-organizations-why-i-joined-honeycomb/ [cks] https://gumroad.com/l/cksbook [py] https://tenthousandmeters.com/blog/python-behind-the-scenes-1-how-the-cpython-vm-works/ [sre] https://linkedin.github.io/school-of-sre/ [outage] https://slack.engineering/slacks-outage-on-january-4th-2021/ [k8s] [sec] https://labs.bishopfox.com/tech-blog/bad-pods-kubernetes-pod-privilege-escalation [tf] https://medium.com/last9/infrastructure-as-code-as-software-a5e4b2b93e8e [linux] https://www.redhat.com/sysadmin/cgroups-part-one [py] https://www.sanjaysiddhanti.com/2020/04/08/s3testing/ [linux] https://blog.stackpath.com/bpf-hook-points-part-1/ [docs] https://developers.google.com/tech-writing/overview  </description>
    </item>
    
    <item>
      <title>Today I Learned (TIL)</title>
      <link>http://amcpu.org/kb/docs/til/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://amcpu.org/kb/docs/til/</guid>
      <description>2021-02-21 #   nmap-ncat can execute a command for any connections established to a listening port with the -e option for exec or -c for a command run with /bin/sh. ncat -l 1234 -c &amp;quot;date&amp;quot;   </description>
    </item>
    
  </channel>
</rss>
